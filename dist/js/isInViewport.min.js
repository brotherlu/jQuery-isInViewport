!function(e,s){"user strict";function i(i){var a=e(i).offset().top,t=a+e(i).height(),l=e(s).scrollTop(),c=l+e(s).height(),n=c-a>=0?c-a:0,o=t-l>=0?t-l:0,r=Math.min(e(i).height(),n,o)/e(s).height(),h=Math.min(e(i).height(),n,o)/e(i).height();return{isVisible:c>a&&t>=l,percentageOfViewport:r,percentageOfElement:h}}e.fn.isInViewport=function(s){var a={className:"isVisible",isVisibleEnterCallback:function(){},isVisibleExitCallback:function(){},focusName:"isFocus",isFocusEnterCallback:function(){},isFocusExitCallback:function(){}};e.extend(a,s);var t={percentage:0,element:null};return this.each(function(){var s=i(this);s.isVisible?(e(this).hasClass(a.className)||(e(this).addClass(a.className),a.isVisibleEnterCallback.call(this)),s.percentageOfViewport>t.percentage&&(t.percentage=s.percentageOfViewport,t.element=this)):!s.isVisible&&e(this).hasClass(a.className)&&(e(this).removeClass(a.className).removeClass(a.focusName),a.isVisibleExitCallback.call(this))}).promise().done(function(){var s=e("."+a.focusName)[0];s!==t.element&&(void 0!==s&&(a.isFocusExitCallback.call(s),e(s).removeClass(a.focusName)),e(t.element).addClass(a.focusName),a.isFocusEnterCallback.call(t.element))})}}(jQuery,window);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzSW5WaWV3cG9ydC5qcyJdLCJuYW1lcyI6WyIkIiwid2luZG93IiwiaXNJblZpZXdwb3J0IiwiZWxlbSIsImVsZW1Ub3AiLCJvZmZzZXQiLCJ0b3AiLCJlbGVtQm90dG9tIiwiaGVpZ2h0Iiwidmlld3BvcnRUb3AiLCJzY3JvbGxUb3AiLCJ2aWV3cG9ydEJvdHRvbSIsInRvcERpc3RhbmNlIiwiYm90dG9tRGlzdGFuY2UiLCJwZXJjZW50YWdlT2ZWaWV3cG9ydCIsIk1hdGgiLCJtaW4iLCJwZXJjZW50YWdlT2ZFbGVtZW50IiwiaXNWaXNpYmxlIiwiZm4iLCJvcHRpb25zIiwic2V0dGluZ3MiLCJjbGFzc05hbWUiLCJpc1Zpc2libGVFbnRlckNhbGxiYWNrIiwiaXNWaXNpYmxlRXhpdENhbGxiYWNrIiwiZm9jdXNOYW1lIiwiaXNGb2N1c0VudGVyQ2FsbGJhY2siLCJpc0ZvY3VzRXhpdENhbGxiYWNrIiwiZXh0ZW5kIiwibWF4UGVyY2VudCIsInBlcmNlbnRhZ2UiLCJlbGVtZW50IiwidGhpcyIsImVhY2giLCJ2aWV3RGF0YSIsImhhc0NsYXNzIiwiYWRkQ2xhc3MiLCJjYWxsIiwicmVtb3ZlQ2xhc3MiLCJwcm9taXNlIiwiZG9uZSIsImUiLCJ1bmRlZmluZWQiLCJqUXVlcnkiXSwibWFwcGluZ3MiOiJDQUFBLFNBQUFBLEVBQUFDLEdBQ0EsYUFFQSxTQUFBQyxHQUFBQyxHQUNBLEdBQUFDLEdBQUFKLEVBQUFHLEdBQUFFLFNBQUFDLElBQ0FDLEVBQUFILEVBQUFKLEVBQUFHLEdBQUFLLFNBQ0FDLEVBQUFULEVBQUFDLEdBQUFTLFlBQ0FDLEVBQUFGLEVBQUFULEVBQUFDLEdBQUFPLFNBQ0FJLEVBQUFELEVBQUFQLEdBQUEsRUFBQU8sRUFBQVAsRUFBQSxFQUNBUyxFQUFBTixFQUFBRSxHQUFBLEVBQUFGLEVBQUFFLEVBQUEsRUFDQUssRUFBQUMsS0FBQUMsSUFBQWhCLEVBQUFHLEdBQUFLLFNBQUFJLEVBQUFDLEdBQUFiLEVBQUFDLEdBQUFPLFNBQ0FTLEVBQUFGLEtBQUFDLElBQUFoQixFQUFBRyxHQUFBSyxTQUFBSSxFQUFBQyxHQUFBYixFQUFBRyxHQUFBSyxRQUVBLFFBQ0FVLFVBQUFQLEVBQUFQLEdBQUFHLEdBQUFFLEVBQ0FLLHFCQUFBQSxFQUNBRyxvQkFBQUEsR0FJQWpCLEVBQUFtQixHQUFBakIsYUFBQSxTQUFBa0IsR0FHQSxHQUFBQyxJQUNBQyxVQUFBLFlBQ0FDLHVCQUFBLGFBQ0FDLHNCQUFBLGFBQ0FDLFVBQUEsVUFDQUMscUJBQUEsYUFDQUMsb0JBQUEsYUFJQTNCLEdBQUE0QixPQUFBUCxFQUFBRCxFQUdBLElBQUFTLElBQ0FDLFdBQUEsRUFDQUMsUUFBQSxLQUdBLE9BQUFDLE1BQUFDLEtBQUEsV0FFQSxHQUFBQyxHQUFBaEMsRUFBQThCLEtBR0FFLEdBQUFoQixXQUVBbEIsRUFBQWdDLE1BQUFHLFNBQUFkLEVBQUFDLGFBRUF0QixFQUFBZ0MsTUFBQUksU0FBQWYsRUFBQUMsV0FHQUQsRUFBQUUsdUJBQUFjLEtBQUFMLE9BSUFFLEVBQUFwQixxQkFBQWUsRUFBQUMsYUFHQUQsRUFBQUMsV0FBQUksRUFBQXBCLHFCQUNBZSxFQUFBRSxRQUFBQyxRQUlBRSxFQUFBaEIsV0FBQWxCLEVBQUFnQyxNQUFBRyxTQUFBZCxFQUFBQyxhQUVBdEIsRUFBQWdDLE1BQUFNLFlBQUFqQixFQUFBQyxXQUFBZ0IsWUFBQWpCLEVBQUFJLFdBRUFKLEVBQUFHLHNCQUFBYSxLQUFBTCxTQUdBTyxVQUFBQyxLQUFBLFdBRUEsR0FBQUMsR0FBQXpDLEVBQUEsSUFBQXFCLEVBQUFJLFdBQUEsRUFFQWdCLEtBQUFaLEVBQUFFLFVBQ0FXLFNBQUFELElBQ0FwQixFQUFBTSxvQkFBQVUsS0FBQUksR0FHQXpDLEVBQUF5QyxHQUFBSCxZQUFBakIsRUFBQUksWUFJQXpCLEVBQUE2QixFQUFBRSxTQUFBSyxTQUFBZixFQUFBSSxXQUVBSixFQUFBSyxxQkFBQVcsS0FBQVIsRUFBQUUsY0FNQVksT0FBQTFDIiwiZmlsZSI6ImlzSW5WaWV3cG9ydC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oJCwgd2luZG93KXtcbiAgJ3VzZXIgc3RyaWN0JztcblxuICBmdW5jdGlvbiBpc0luVmlld3BvcnQoZWxlbSl7XG4gICAgdmFyIGVsZW1Ub3AgPSAkKGVsZW0pLm9mZnNldCgpLnRvcCxcbiAgICAgICAgZWxlbUJvdHRvbSA9IGVsZW1Ub3AgKyAkKGVsZW0pLmhlaWdodCgpLFxuICAgICAgICB2aWV3cG9ydFRvcCA9ICQod2luZG93KS5zY3JvbGxUb3AoKSxcbiAgICAgICAgdmlld3BvcnRCb3R0b20gPSB2aWV3cG9ydFRvcCArICQod2luZG93KS5oZWlnaHQoKSxcbiAgICAgICAgdG9wRGlzdGFuY2UgPSAoKHZpZXdwb3J0Qm90dG9tIC0gZWxlbVRvcCkgPj0gMCkgPyB2aWV3cG9ydEJvdHRvbSAtIGVsZW1Ub3AgOiAwLFxuICAgICAgICBib3R0b21EaXN0YW5jZSA9ICgoZWxlbUJvdHRvbSAtIHZpZXdwb3J0VG9wKSA+PSAwKSA/IGVsZW1Cb3R0b20gLSB2aWV3cG9ydFRvcCA6IDAsXG4gICAgICAgIHBlcmNlbnRhZ2VPZlZpZXdwb3J0ID0gKE1hdGgubWluKCQoZWxlbSkuaGVpZ2h0KCksdG9wRGlzdGFuY2UsIGJvdHRvbURpc3RhbmNlICkpLyQod2luZG93KS5oZWlnaHQoKSxcbiAgICAgICAgcGVyY2VudGFnZU9mRWxlbWVudCA9IChNYXRoLm1pbigkKGVsZW0pLmhlaWdodCgpLHRvcERpc3RhbmNlLCBib3R0b21EaXN0YW5jZSApKS8kKGVsZW0pLmhlaWdodCgpO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGlzVmlzaWJsZTogKGVsZW1Ub3AgPCB2aWV3cG9ydEJvdHRvbSAmJiBlbGVtQm90dG9tID49IHZpZXdwb3J0VG9wKSxcbiAgICAgIHBlcmNlbnRhZ2VPZlZpZXdwb3J0OiBwZXJjZW50YWdlT2ZWaWV3cG9ydCxcbiAgICAgIHBlcmNlbnRhZ2VPZkVsZW1lbnQ6IHBlcmNlbnRhZ2VPZkVsZW1lbnRcbiAgICB9O1xuICB9XG5cbiAgJC5mbi5pc0luVmlld3BvcnQgPSBmdW5jdGlvbihvcHRpb25zKXtcblxuICAgIC8vIGRlZmF1bHQgc2V0dGluZ3NcbiAgICB2YXIgc2V0dGluZ3MgPSB7XG4gICAgICBjbGFzc05hbWU6ICdpc1Zpc2libGUnLFxuICAgICAgaXNWaXNpYmxlRW50ZXJDYWxsYmFjazogZnVuY3Rpb24oKXt9LFxuICAgICAgaXNWaXNpYmxlRXhpdENhbGxiYWNrOiBmdW5jdGlvbigpe30sXG4gICAgICBmb2N1c05hbWU6ICdpc0ZvY3VzJyxcbiAgICAgIGlzRm9jdXNFbnRlckNhbGxiYWNrOiBmdW5jdGlvbigpe30sXG4gICAgICBpc0ZvY3VzRXhpdENhbGxiYWNrOiBmdW5jdGlvbigpe31cbiAgICB9O1xuXG4gICAgLy8gRXh0ZW5kIHRoZSBzZXR0aW5ncyB3aXRoIHRoZSBpbnB1dHRlZCBvcHRpb25zXG4gICAgJC5leHRlbmQoc2V0dGluZ3MsIG9wdGlvbnMpO1xuICAgIFxuICAgIC8vIEhvbGRpbmcgbWF4aW11bSBwZXJjZW50YWdlXG4gICAgdmFyIG1heFBlcmNlbnQgPSB7XG4gICAgICBwZXJjZW50YWdlOiAwLFxuICAgICAgZWxlbWVudDogbnVsbFxuICAgIH07XG5cbiAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7XG5cbiAgICAgIHZhciB2aWV3RGF0YSA9IGlzSW5WaWV3cG9ydCh0aGlzKTtcblxuICAgICAgLy8gQ2hlY2sgZm9yIHZpc2libGUgZWxlbWVudHNcbiAgICAgIGlmKHZpZXdEYXRhLmlzVmlzaWJsZSl7XG4gICAgICAgIFxuICAgICAgICBpZighJCh0aGlzKS5oYXNDbGFzcyhzZXR0aW5ncy5jbGFzc05hbWUpKXtcbiAgICAgICAgICAvLyBBZGQgQ2xhc3NOYW1lXG4gICAgICAgICAgJCh0aGlzKS5hZGRDbGFzcyhzZXR0aW5ncy5jbGFzc05hbWUpO1xuXG4gICAgICAgICAgLy8gRXhlY3V0ZSB0aGUgZW50ZXIgdmlzaWJsZSBjYWxsYmFja1xuICAgICAgICAgIHNldHRpbmdzLmlzVmlzaWJsZUVudGVyQ2FsbGJhY2suY2FsbCh0aGlzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIENoZWNrIGlmIHRoZSBlbGVtZW50IGlzIHRoZSBtb3N0IHZpc2libGUgZWxlbWVudFxuICAgICAgICBpZih2aWV3RGF0YS5wZXJjZW50YWdlT2ZWaWV3cG9ydCA+IG1heFBlcmNlbnQucGVyY2VudGFnZSApe1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIFN0b3JlIHRoZSBuZXcgbWF4IHZpZXcgcGVyY2VudGFnZVxuICAgICAgICAgIG1heFBlcmNlbnQucGVyY2VudGFnZSA9IHZpZXdEYXRhLnBlcmNlbnRhZ2VPZlZpZXdwb3J0O1xuICAgICAgICAgIG1heFBlcmNlbnQuZWxlbWVudCA9IHRoaXM7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBDbGVhbnVwIGFsbCBub24gdmlzaWJsZSBlbGVtZW50c1xuICAgICAgfSBlbHNlIGlmICghdmlld0RhdGEuaXNWaXNpYmxlICYmICQodGhpcykuaGFzQ2xhc3Moc2V0dGluZ3MuY2xhc3NOYW1lKSl7XG4gICAgICAgIC8vIFJlbW92ZSBhbGwgY2xhc3NlcyBmcm9tIHRoZSBlbGVtZW50c1xuICAgICAgICAkKHRoaXMpLnJlbW92ZUNsYXNzKHNldHRpbmdzLmNsYXNzTmFtZSkucmVtb3ZlQ2xhc3Moc2V0dGluZ3MuZm9jdXNOYW1lKTtcbiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgZGlzYXBwZWFyIGNhbGxiYWNrXG4gICAgICAgIHNldHRpbmdzLmlzVmlzaWJsZUV4aXRDYWxsYmFjay5jYWxsKHRoaXMpO1xuICAgICAgfVxuICAgICAgLy8gT25jZSBlYWNoIGlzIGNvbXBsZXRlZCBzdGFydCB0aGUgZGVmZXJlZCBmdW5jdGlvblxuICAgIH0pLnByb21pc2UoKS5kb25lKGZ1bmN0aW9uKCl7XG4gICAgICBcbiAgICAgIHZhciBlID0gJCgnLicrc2V0dGluZ3MuZm9jdXNOYW1lKVswXTtcblxuICAgICAgaWYgKGUgIT09IG1heFBlcmNlbnQuZWxlbWVudCkge1xuICAgICAgICBpZiAoZSAhPT0gdW5kZWZpbmVkKXtcbiAgICAgICAgICBzZXR0aW5ncy5pc0ZvY3VzRXhpdENhbGxiYWNrLmNhbGwoZSk7XG5cbiAgICAgICAgICAvLyByZW1vdmUgdGhlIG9sZCBmb2N1cyBlbGVtZW50XG4gICAgICAgICAgJChlKS5yZW1vdmVDbGFzcyhzZXR0aW5ncy5mb2N1c05hbWUpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gYWRkIHRoZSBmb2N1cyBjbGFzcyB0byB0aGUgY3VycmVudCBlbGVtZW50XG4gICAgICAgICQobWF4UGVyY2VudC5lbGVtZW50KS5hZGRDbGFzcyhzZXR0aW5ncy5mb2N1c05hbWUpO1xuICAgICAgICAvLyBydW4gdGhlIGVudGVyIGNhbGxiYWNrIG9uIHRoZSBuZXcgZWxlbWVudFxuICAgICAgICBzZXR0aW5ncy5pc0ZvY3VzRW50ZXJDYWxsYmFjay5jYWxsKG1heFBlcmNlbnQuZWxlbWVudCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgfTtcblxufShqUXVlcnksIHdpbmRvdykpO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9